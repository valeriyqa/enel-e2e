{
	"info": {
		"_postman_id": "a0f864f8-2bce-4b67-86fe-5a33a1c81c3c",
		"name": "ES_Alpha_TFS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "EnergyGroup",
			"item": [
				{
					"name": "createEnergyGroup_root",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91f925af-497b-4d8f-a31d-e7d23fb57b0f",
								"exec": [
									"if(responseBody===\"\")\r",
									"{\r",
									"    console.log(\" Response body is \");  \r",
									"    tests[\"Status code is \"+responseCode.code] = responseCode.code == 201;\r",
									"    tests[\"Response time is \"+responseTime] = responseTime ;\r",
									"    return;\r",
									"}\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"if(jsonData!==null)\r",
									"{\r",
									"    var schema=\r",
									"    {\r",
									"        \"$id\": \"http://example.com/example.json\",\r",
									"        \"type\": \"object\",\r",
									"        \"definitions\": {},\r",
									"        \"$schema\": \"http://json-schema.org/draft-06/schema#\",\r",
									"        \"properties\": {\r",
									"            \"groupId\": {\r",
									"            \"$id\": \"/properties/groupId\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The Groupid Schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"f4cf9c2e-fdad-44f1-8e6b-19883ae0e360\"\r",
									"            ]\r",
									"            },\r",
									"            \"name\": {\r",
									"            \"$id\": \"/properties/name\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The Name Schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"test1\"\r",
									"            ]\r",
									"            },\r",
									"            \"groupType\": {\r",
									"            \"$id\": \"/properties/groupType\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The Grouptype Schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"Energy\"\r",
									"            ]\r",
									"            },\r",
									"            \"jurisdiction\": {\r",
									"            \"$id\": \"/properties/jurisdiction\",\r",
									"            \"type\": \"string\",\r",
									"            \"title\": \"The Jurisdiction Schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": \"\",\r",
									"            \"examples\": [\r",
									"                \"CAISO\"\r",
									"            ]\r",
									"            },\r",
									"            \"unitsCount\": {\r",
									"            \"$id\": \"/properties/unitsCount\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The Unitscount Schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                0\r",
									"            ]\r",
									"            },\r",
									"            \"isDeleted\": {\r",
									"            \"$id\": \"/properties/isDeleted\",\r",
									"            \"type\": \"boolean\",\r",
									"            \"title\": \"The Isdeleted Schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": false,\r",
									"            \"examples\": [\r",
									"                false\r",
									"            ]\r",
									"            },\r",
									"            \"totalInstantCurrentIn_mA\": {\r",
									"            \"$id\": \"/properties/totalInstantCurrentIn_mA\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The Totalinstantcurrentin_ma Schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                0\r",
									"            ]\r",
									"            },\r",
									"            \"totalInstantPowerIn_kW\": {\r",
									"            \"$id\": \"/properties/totalInstantPowerIn_kW\",\r",
									"            \"type\": \"integer\",\r",
									"            \"title\": \"The Totalinstantpowerin_kw Schema\",\r",
									"            \"description\": \"An explanation about the purpose of this instance.\",\r",
									"            \"default\": 0,\r",
									"            \"examples\": [\r",
									"                0\r",
									"            ]\r",
									"            }\r",
									"        }\r",
									"    };\r",
									"    \r",
									"    tests[\"Is Json  valid?\"] = tv4.validate( jsonData, schema);\r",
									"    tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");\r",
									"    tests[\"Status code is 200\"] = responseCode.code === 201;\r",
									"    tests[\"Response time is \"+responseTime+\" \"+\"and less than \"+postman.getEnvironmentVariable(\"response_valid_time_ms\") +\" \"+\" ms\"] = responseTime < postman.getEnvironmentVariable(\"response_valid_time_ms\");\r",
									"\r",
									"    //tests[\"version field is present\"]= responseBody.has(\"version\");\r",
									"    tests[\"name field is present\"]= responseBody.has(\"name\");\r",
									"        tests[\"groupType field is present\"]= responseBody.has(\"groupType\");\r",
									"        //tests[\"jurisdiction field is present\"]= responseBody.has(\"jurisdiction\");\r",
									"                tests[\"unitsCount field is present\"]= responseBody.has(\"unitsCount\");\r",
									"                    tests[\"isDeleted field is present\"]= responseBody.has(\"isDeleted\");\r",
									"                        tests[\"totalInstantCurrentIn_mA field is present\"]= responseBody.has(\"totalInstantCurrentIn_mA\");\r",
									"                            tests[\"totalInstantPowerIn_kW field is present\"]= responseBody.has(\"totalInstantPowerIn_kW\");\r",
									"\r",
									"    \r",
									"    postman.setEnvironmentVariable(\"Group_root\", jsonData.groupId);\r",
									"    // postman.setEnvironmentVariable(\"name_idv\", jsonData.name);\r",
									"    // postman.setEnvironmentVariable(\"groupType_idv\", jsonData.groupType);\r",
									"    // postman.setEnvironmentVariable(\"setting_idv\",\"maxAllowedSummCurrent\");\r",
									"    // postman.setEnvironmentVariable(\"jurisdiction_idv\",jsonData.jurisdiction);\r",
									"\r",
									"}else{\r",
									"    console.log(\"no json avaliable\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_es}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"aTest group\",\r\n  \"groupType\": \"Energy\",\r\n  \"jurisdiction\": \"caiso\",\r\n  \"parentGroups\": []\r\n}"
						},
						"url": {
							"raw": "{{url_esapi}}/api/v1/groups",
							"host": [
								"{{url_esapi}}"
							],
							"path": [
								"api",
								"v1",
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteEnergyGroup_root",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a198c84-45c7-43bb-9ce9-3159754ad147",
								"exec": [
									"if (responseBody===\"\")",
									"{",
									"    console.log(\" Response body is \");  ",
									"    tests[\"Status code is \" + responseCode.code] = responseCode.code == 204;",
									"    tests[\"Response time is \" + responseTime] = responseTime ;",
									"    return;",
									"}",
									"",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\")",
									"tests[\"Status code is 204\"] = responseCode.code === 204;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token_es}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_esapi}}/api/v1/groups/{{Group_root}}",
							"host": [
								"{{url_esapi}}"
							],
							"path": [
								"api",
								"v1",
								"groups",
								"{{Group_root}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}